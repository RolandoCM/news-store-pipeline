services:
  #spark-iceberg:
  #  build: .
  #  ports:
  #    - "4040:4040"
  #    - "18080:18080" # Spark History Server
  #  environment:
  #    - SPARK_MASTER=spark://spark-master:7077
  #    - ICEBERG_CATALOG=news_catalog
  #    - ICEBERG_WHEREHOUSE=file:///data/iceberg
  #  volumes:
  #    - ./data/iceberg:/data/iceberg
  #    - ./logs:/apps/logs
  #  depends_on:
  #    - spark-master
  #    - cassandra
  #    - kafka
  spark-master:
    image: bitnami/spark:latest
    command: bin/spark-class org.apache.spark.deploy.master.Master
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_LOCAL_IP=spark-master
    ports:
      - "7077:7077"
      - "8080:8080"
      - '4040:4040' # Spark worker data
    volumes:
      - ./scripts:/opt/spark/scripts
      - ./data:/opt/spark/data
      - ./spark-logs:/opt/spark/spark-events
      - ./warehouse:/opt/spark/warehouse
  spark-worker:
    image: bitnami/spark:latest
    command: bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
    environment:
      - SPARK_WORKER_CORES=2
      - SPARK_WORKER_MEMORY=2g
      - SPARK_LOCAL_IP=spark-worker
    depends_on:
      - spark-master
    volumes:
      - ./scripts:/opt/spark/scripts
      - ./data:/opt/spark/data
      - ./spark-logs:/opt/spark/spark-events
      - ./warehouse:/opt/spark/warehouse
  #rest:
   # image: apache/iceberg-rest-fixture
   # container_name: iceberg-rest
  #  ports:
  #    - 8181:8181
  #  environment:
  #    - AWS_ACCESS_KEY_ID=admin
  #    - AWS_SECRET_ACCESS_KEY=password
  #    - AWS_REGION=us-east-1
  #    - CATALOG_WAREHOUSE=s3://warehouse/
  #    - CATALOG_IO__IMPL=org.apache.iceberg.aws.s3.S3FileIO
  #    - CATALOG_S3_ENDPOINT=http://minio:9000
  cassandra:
    image: cassandra:4.0
    ports:
      - "9042:9042"
    environment:
      - CASSANDRA_CLUSTER_NAME=NewsCluster
      - CASSANDRA_DC=datacenter1
  kafka:
    image: apache/kafka-native
    ports:
      - "9092:9092"
    environment:
      # Configure listeners for both docker and host communication
      KAFKA_LISTENERS: CONTROLLER://localhost:9091,HOST://0.0.0.0:9092,DOCKER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: HOST://localhost:9092,DOCKER://kafka:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,DOCKER:PLAINTEXT,HOST:PLAINTEXT

      # Settings required for KRaft mode
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9091

      # Listener to use for broker-to-broker communication
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER

      # Required for a single node cluster
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  kafka-ui:
    image: kafbat/kafka-ui:main
    ports:
      - 9002:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: "true"
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9093
    depends_on:
      - kafka

  zookeeper:
    image: zookeeper:3.6
    ports:
      - "2181:2181"

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - ./data/minio:/data

volumes:
  iceberg-data:
  minio-data: